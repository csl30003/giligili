// Code generated by goctl. DO NOT EDIT.
// Source: video.proto

package server

import (
	"context"

	"giligili/app/video/rpc/internal/logic"
	"giligili/app/video/rpc/internal/svc"
	"giligili/app/video/rpc/pb"
)

type VideoServiceServer struct {
	svcCtx *svc.ServiceContext
	pb.UnimplementedVideoServiceServer
}

func NewVideoServiceServer(svcCtx *svc.ServiceContext) *VideoServiceServer {
	return &VideoServiceServer{
		svcCtx: svcCtx,
	}
}

func (s *VideoServiceServer) GetVideoList(ctx context.Context, in *pb.GetVideoListReq) (*pb.GetVideoListResp, error) {
	l := logic.NewGetVideoListLogic(ctx, s.svcCtx)
	return l.GetVideoList(in)
}

func (s *VideoServiceServer) GetVideoDetail(ctx context.Context, in *pb.GetVideoDetailReq) (*pb.GetVideoDetailResp, error) {
	l := logic.NewGetVideoDetailLogic(ctx, s.svcCtx)
	return l.GetVideoDetail(in)
}

func (s *VideoServiceServer) UploadVideo(ctx context.Context, in *pb.UploadVideoReq) (*pb.UploadVideoResp, error) {
	l := logic.NewUploadVideoLogic(ctx, s.svcCtx)
	return l.UploadVideo(in)
}

func (s *VideoServiceServer) LikeVideo(ctx context.Context, in *pb.LikeVideoReq) (*pb.LikeVideoResp, error) {
	l := logic.NewLikeVideoLogic(ctx, s.svcCtx)
	return l.LikeVideo(in)
}

func (s *VideoServiceServer) UnlikeVideo(ctx context.Context, in *pb.UnlikeVideoReq) (*pb.UnlikeVideoResp, error) {
	l := logic.NewUnlikeVideoLogic(ctx, s.svcCtx)
	return l.UnlikeVideo(in)
}

func (s *VideoServiceServer) DislikeVideo(ctx context.Context, in *pb.DislikeVideoReq) (*pb.DislikeVideoResp, error) {
	l := logic.NewDislikeVideoLogic(ctx, s.svcCtx)
	return l.DislikeVideo(in)
}

func (s *VideoServiceServer) UndislikeVideo(ctx context.Context, in *pb.UndislikeVideoReq) (*pb.UndislikeVideoResp, error) {
	l := logic.NewUndislikeVideoLogic(ctx, s.svcCtx)
	return l.UndislikeVideo(in)
}
